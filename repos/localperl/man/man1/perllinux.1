.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLLINUX 1"
.TH PERLLINUX 1 2024-02-27 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
perllinux \- Perl version 5 on Linux systems
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This document describes various features of Linux that will affect how Perl
version 5 (hereafter just Perl) is compiled and/or runs.
.SS "Deploying Perl on Linux"
.IX Subsection "Deploying Perl on Linux"
Normally one can install \fI/usr/bin/perl\fR on Linux using your distribution's
package manager (e.g: \f(CW\*(C`sudo apt\-get install perl\*(C'\fR, or
\&\f(CW\*(C`sudo dnf install perl\*(C'\fR). Note that sometimes one needs to install some
extra system packages in order to be able to use CPAN frontends, and that
messing with the system's perl is not always recommended. One can use
perlbrew <https://perlbrew.pl/> to avoid such issues.
.PP
Otherwise, perl should build fine on Linux using the mainstream compilers
GCC and clang, while following the usual instructions.
.SS "Experimental Support for Sun Studio Compilers for Linux OS"
.IX Subsection "Experimental Support for Sun Studio Compilers for Linux OS"
Sun Microsystems has released a port of their Sun Studio compilers for
Linux.  As of May 2019, the last stable release took place on 2017, and one can
buy support contracts for them.
.PP
There are some special instructions for building Perl with Sun Studio on
Linux.  Following the normal \f(CW\*(C`Configure\*(C'\fR, you have to run make as follows:
.PP
.Vb 1
\&    LDLOADLIBS=\-lc make
.Ve
.PP
\&\f(CW\*(C`LDLOADLIBS\*(C'\fR is an environment variable used by the linker to link
\&\f(CW\*(C`/ext\*(C'\fR modules to glibc.  Currently, that environment variable is not getting
populated by a combination of \f(CW\*(C`Config\*(C'\fR entries and \f(CW\*(C`ExtUtil::MakeMaker\*(C'\fR.
While there may be a bug somewhere in Perl's configuration or
\&\f(CW\*(C`ExtUtil::MakeMaker\*(C'\fR causing the problem, the most likely cause is an
incomplete understanding of Sun Studio by this author.  Further investigation
is needed to get this working better.
.SH AUTHOR
.IX Header "AUTHOR"
Steve Peters <steve@fisharerojo.org>
.PP
Please report any errors, updates, or suggestions to
<https://github.com/Perl/perl5/issues>.
