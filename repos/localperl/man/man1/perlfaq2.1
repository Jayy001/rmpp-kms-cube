.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLFAQ2 1"
.TH PERLFAQ2 1 2024-04-16 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
perlfaq2 \- Obtaining and Learning about Perl
.SH VERSION
.IX Header "VERSION"
version 5.20240218
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This section of the FAQ answers questions about where to find
source and documentation for Perl, support, and
related matters.
.SS "What machines support Perl? Where do I get it?"
.IX Subsection "What machines support Perl? Where do I get it?"
The standard release of Perl (the one maintained by the Perl
development team) is distributed only in source code form. You
can find the latest releases at <http://www.cpan.org/src/>.
.PP
Perl builds and runs on a bewildering number of platforms. Virtually
all known and current Unix derivatives are supported (perl's native
platform), as are other systems like VMS, DOS, OS/2, Windows,
QNX, BeOS, OS X, MPE/iX and the Amiga.
.PP
Binary distributions for some proprietary platforms can be found
<http://www.cpan.org/ports/> directory. Because these are not part of
the standard distribution, they may and in fact do differ from the
base perl port in a variety of ways. You'll have to check their
respective release notes to see just what the differences are. These
differences can be either positive (e.g. extensions for the features
of the particular platform that are not supported in the source
release of perl) or negative (e.g. might be based upon a less current
source release of perl).
.SS "How can I get a binary version of Perl?"
.IX Subsection "How can I get a binary version of Perl?"
See CPAN Ports <http://www.cpan.org/ports/>
.SS "I don't have a C compiler. How can I build my own Perl interpreter?"
.IX Subsection "I don't have a C compiler. How can I build my own Perl interpreter?"
For Windows, use a binary version of Perl,
Strawberry Perl <http://strawberryperl.com/> and
ActivePerl <http://www.activestate.com/activeperl> come with a
bundled C compiler.
.PP
Otherwise if you really do want to build Perl, you need to get a
binary version of \f(CW\*(C`gcc\*(C'\fR for your system first. Use a search
engine to find out how to do this for your operating system.
.SS "I copied the Perl binary from one machine to another, but scripts don't work."
.IX Subsection "I copied the Perl binary from one machine to another, but scripts don't work."
That's probably because you forgot libraries, or library paths differ.
You really should build the whole distribution on the machine it will
eventually live on, and then type \f(CW\*(C`make install\*(C'\fR. Most other
approaches are doomed to failure.
.PP
One simple way to check that things are in the right place is to print out
the hard-coded \f(CW@INC\fR that perl looks through for libraries:
.PP
.Vb 1
\&    % perl \-le \*(Aqprint for @INC\*(Aq
.Ve
.PP
If this command lists any paths that don't exist on your system, then you
may need to move the appropriate libraries to these locations, or create
symbolic links, aliases, or shortcuts appropriately. \f(CW@INC\fR is also printed as
part of the output of
.PP
.Vb 1
\&    % perl \-V
.Ve
.PP
You might also want to check out
"How do I keep my own module/library directory?" in perlfaq8.
.SS "I grabbed the sources and tried to compile but gdbm/dynamic loading/malloc/linking/... failed. How do I make it work?"
.IX Subsection "I grabbed the sources and tried to compile but gdbm/dynamic loading/malloc/linking/... failed. How do I make it work?"
Read the \fIINSTALL\fR file, which is part of the source distribution.
It describes in detail how to cope with most idiosyncrasies that the
\&\f(CW\*(C`Configure\*(C'\fR script can't work around for any given system or
architecture.
.SS "What modules and extensions are available for Perl? What is CPAN?"
.IX Subsection "What modules and extensions are available for Perl? What is CPAN?"
CPAN stands for Comprehensive Perl Archive Network, a multi-gigabyte
archive replicated on hundreds of machines all over the world. CPAN
contains tens of thousands of modules and extensions, source code
and documentation, designed for \fIeverything\fR from commercial
database interfaces to keyboard/screen control and running large web sites.
.PP
You can search CPAN on <http://metacpan.org>.
.PP
The master web site for CPAN is <http://www.cpan.org/>,
<http://www.cpan.org/SITES.html> lists all mirrors.
.PP
See the CPAN FAQ at <http://www.cpan.org/misc/cpan\-faq.html> for answers
to the most frequently asked questions about CPAN.
.PP
The Task::Kensho module has a list of recommended modules which
you should review as a good starting point.
.SS "Where can I get information on Perl?"
.IX Subsection "Where can I get information on Perl?"
.IP \(bu 4
<http://www.perl.org/>
.IP \(bu 4
<http://perldoc.perl.org/>
.IP \(bu 4
<http://learn.perl.org/>
.PP
The complete Perl documentation is available with the Perl distribution.
If you have Perl installed locally, you probably have the documentation
installed as well: type \f(CW\*(C`perldoc perl\*(C'\fR in a terminal or
view online <http://perldoc.perl.org/perl.html>.
.PP
(Some operating system distributions may ship the documentation in a different
package; for instance, on Debian, you need to install the \f(CW\*(C`perl\-doc\*(C'\fR package.)
.PP
Many good books have been written about Perl\-\-see the section later in
perlfaq2 for more details.
.SS "What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?"
.IX Subsection "What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?"
Perl.com <http://www.perl.com/> used to be part of the O'Reilly
Network, a subsidiary of O'Reilly Media. Although it retains most of
the original content from its O'Reilly Network, it is now hosted by
The Perl Foundation <http://www.perlfoundation.org/>.
.PP
The Perl Foundation is an advocacy organization for the Perl language
which maintains the web site <http://www.perl.org/> as a general
advocacy site for the Perl language. It uses the domain to provide
general support services to the Perl community, including the hosting
of mailing lists, web sites, and other services. There are also many
other sub-domains for special topics like learning Perl and jobs in Perl,
such as:
.IP \(bu 4
<http://www.perl.org/>
.IP \(bu 4
<http://learn.perl.org/>
.IP \(bu 4
<http://jobs.perl.org/>
.IP \(bu 4
<http://lists.perl.org/>
.PP
Perl Mongers <http://www.pm.org/> uses the pm.org domain for services
related to local Perl user groups, including the hosting of mailing lists
and web sites. See the Perl Mongers web site <http://www.pm.org/> for more
information about joining, starting, or requesting services for a
Perl user group.
.PP
CPAN, or the Comprehensive Perl Archive Network <http://www.cpan.org/>,
is a replicated, worldwide repository of Perl software.
See What is CPAN?.
.SS "Where can I post questions?"
.IX Subsection "Where can I post questions?"
There are many Perl mailing lists for various
topics, specifically the beginners list <http://lists.perl.org/list/beginners.html>
may be of use.
.PP
Other places to ask questions are on the
PerlMonks site <http://www.perlmonks.org/> or
stackoverflow <http://stackoverflow.com/questions/tagged/perl>.
.SS "Perl Books"
.IX Subsection "Perl Books"
There are many good books on Perl <http://www.perl.org/books/library.html>.
.SS "Which magazines have Perl content?"
.IX Subsection "Which magazines have Perl content?"
There are no current magazines that focus on Perl, although you sometimes
will find Perl content in more general interest programming titles.
.PP
In the distant past, there have been a few Perl magazines. The first was \fIThe Perl
Journal\fR, published by Jon Orwant. After that, there was \fIThe Perl Review\fR,
published by brian d foy, and  \fR\f(CI$foo\fR\fI Magazin\fR, published by Renée Bäcker
(<http://www.foo\-magazin.de>).
.PP
The closest you might find today is Perl Weekly, (<https://perlweekly.com>),
an online newsletter with a magazine-like format.
.SS "Which Perl blogs should I read?"
.IX Subsection "Which Perl blogs should I read?"
Perl News <http://perlnews.org/> covers some of the major events in the Perl
world, Perl Weekly <http://perlweekly.com/> is a weekly e\-mail
(and RSS feed) of hand-picked Perl articles.
.PP
<http://blogs.perl.org/> hosts many Perl blogs, there are also
several blog aggregators: Perlsphere <http://perlsphere.net/> and
IronMan <http://ironman.enlightenedperl.org/> are two of them.
.SS "What mailing lists are there for Perl?"
.IX Subsection "What mailing lists are there for Perl?"
A comprehensive list of Perl-related mailing lists can be found at
<http://lists.perl.org/>
.SS "Where can I buy a commercial version of Perl?"
.IX Subsection "Where can I buy a commercial version of Perl?"
Perl already \fIis\fR commercial software: it has a license
that you can grab and carefully read to your manager. It is distributed
in releases and comes in well-defined packages. There is a very large
and supportive user community and an extensive literature.
.PP
If you still need commercial support
ActiveState <http://www.activestate.com/activeperl> offers
this.
.SS "Where do I send bug reports?"
.IX Subsection "Where do I send bug reports?"
(contributed by brian d foy)
.PP
First, ensure that you've found an actual bug. Second, ensure you've
found an actual bug.
.PP
If you've found a bug with the perl interpreter or one of the modules
in the standard library (those that come with Perl), submit a
bug report to the GitHub issue tracker at
<https://github.com/Perl/perl5/issues>.
.PP
To determine if a module came with your version of Perl, you can
install and use Module::CoreList. It knows the modules (with their
versions) included with each release of Perl:
.PP
.Vb 3
\&        $ corelist File::Copy
\&        Data for 2023\-07\-02
\&        File::Copy was first released with perl 5.002
\&
\&        $ corelist Business::ISBN
\&        Data for 2023\-07\-02
\&        Business::ISBN was not in CORE (or so I think)
.Ve
.PP
If the module does not come with Perl, report its issues
using the tool that the particular module author decided to use, such as
a GitHub or Google Code. The quickest way may be to check the MetaCPAN
page for the module (for example,
<https://metacpan.org/pod/Business::ISBN>), which shows the denoted
bugtracker in the left sidebar as the "Issues" link.
.PP
Also check the module's documentation, \fIREADME\fR, the build files
(\fIMakefile.PL\fR or \f(CW\*(C`Build.PL\*(C'\fR), or \fIMETA.{json,yml}\fR files. Although
many module authors follow the same pattern, some have their own way.
Use the directions you find.
.PP
Sometimes the module author does not declare a bugtracker. For a long
time, everyone assumed that the CPAN Request Tracker
(<https://rt.cpan.org>) was the bugtracker since every distribution had
an RT queue generated automatically. In somes cases, the author might
use CPAN RT. They also might have not declared a different
bugtracker but don't use CPAN RT.
.PP
Submit bugs to RT either through its web interface,
<https://rt.cpan.org>, or by email. Send email to \fIbug\-<distribution\-name>@rt.cpan.org\fR. For example, if you
wanted to report a bug in the example module Foo::Bar, you could send
a message to \fIbug\-Foo\-Bar@rt.cpan.org\fR.
.SH "AUTHOR AND COPYRIGHT"
.IX Header "AUTHOR AND COPYRIGHT"
Copyright (c) 1997\-2010 Tom Christiansen, Nathan Torkington, and
other authors as noted. All rights reserved.
.PP
This documentation is free; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
Irrespective of its distribution, all code examples here are in the public
domain. You are permitted and encouraged to use this code and any
derivatives thereof in your own programs for fun or for profit as you
see fit. A simple comment in the code giving credit to the FAQ would
be courteous but is not required.
