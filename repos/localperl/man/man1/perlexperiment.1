.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLEXPERIMENT 1"
.TH PERLEXPERIMENT 1 2024-05-29 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
perlexperiment \- A listing of experimental features in Perl
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This document lists the current and past experimental features in the perl
core. Although all of these are documented with their appropriate topics,
this succinct listing gives you an overview and basic facts about their
status.
.PP
So far we've merely tried to find and list the experimental features and infer
their inception, versions, etc. There's a lot of speculation here.
.SS "Current experiments"
.IX Subsection "Current experiments"
.ie n .IP "Smart match (""~~"")" 8
.el .IP "Smart match (\f(CW~~\fR)" 8
.IX Item "Smart match (~~)"
Introduced in Perl 5.10.0
.Sp
Modified in Perl 5.10.1, 5.12.0
.Sp
Deprecated in 5.38.0
.Sp
Will be removed in 5.42.0
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`deprecated\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #13173] <https://github.com/Perl/perl5/issues/13173>.
.IP "Pluggable keywords" 8
.IX Item "Pluggable keywords"
Introduced in Perl 5.11.2
.Sp
See "PL_keyword_plugin" in perlapi for the mechanism.
.Sp
The ticket for this experiment is
[perl #13199] <https://github.com/Perl/perl5/issues/13199>.
.IP "Aliasing via reference" 8
.IX Item "Aliasing via reference"
Introduced in Perl 5.22.0
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::refaliasing\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #14150] <https://github.com/Perl/perl5/issues/14150>.
.Sp
See also: "Assigning to References" in perlref
.IP "use re 'strict';" 8
.IX Item "use re 'strict';"
Introduced in Perl 5.22.0
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::re_strict\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #18755] <https://github.com/Perl/perl5/issues/18755>
.Sp
See "'strict' mode" in re
.IP "Declaring a reference to a variable" 8
.IX Item "Declaring a reference to a variable"
Introduced in Perl 5.26.0
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::declared_refs\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #15458] <https://github.com/Perl/perl5/issues/15458>.
.Sp
See also: "Declaring a Reference to a Variable" in perlref
.ie n .IP "There is an ""installhtml"" target in the Makefile." 8
.el .IP "There is an \f(CWinstallhtml\fR target in the Makefile." 8
.IX Item "There is an installhtml target in the Makefile."
The ticket for this experiment is
[perl #12726] <https://github.com/Perl/perl5/issues/12726>.
.IP "(Limited) Variable-length look-behind" 8
.IX Item "(Limited) Variable-length look-behind"
Introduced in Perl 5.30.0.
.Sp
Variability of up to 255 characters is handled.
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::vlb\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #18756] <https://github.com/Perl/perl5/issues/18756>.
.Sp
See also: "(*positive_lookbehind:\fIpattern\fR)" in perlre and
"(*negative_lookbehind:\fIpattern\fR)" in perlre
.IP "Unicode private use character hooks" 8
.IX Item "Unicode private use character hooks"
Introduced in Perl 5.30.0.
.Sp
This feature is part of an interface intended for internal and experimental
use by the perl5 developers.  You are unlikely to encounter it in the wild.
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::private_use\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #18758] <https://github.com/Perl/perl5/issues/18758>.
.IP "Unicode property wildcards" 8
.IX Item "Unicode property wildcards"
Introduced in Perl 5.30.0.
.Sp
This feature allows regular expression matching against Unicode character
properties to be expressed more concisely.
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::uniprop_wildcards\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #18759] <https://github.com/Perl/perl5/issues/18759>.
.IP "try/catch control structure" 8
.IX Item "try/catch control structure"
Introduced in Perl 5.34.0.
.Sp
Using the optional \f(CW\*(C`finally\*(C'\fR block part of this feature triggers warnings in
the category \f(CW\*(C`experimental::try\*(C'\fR.
.Sp
The ticket for this experiment is
[perl #18760] <https://github.com/Perl/perl5/issues/18760>
.ie n .IP "Use of @_ within subroutine signatures" 8
.el .IP "Use of \f(CW@_\fR within subroutine signatures" 8
.IX Item "Use of @_ within subroutine signatures"
Introduced in Perl 5.36.0 as part of a reduction in the scope of experimental
subroutine signatures.
.Sp
Using the default arguments array (\f(CW@_\fR) within a subroutine that uses
signatures will emit a warning in the category
\&\f(CW\*(C`experimental::args_array_with_signatures\*(C'\fR. This includes \f(CW@_\fR directly,
elements of it such as \f(CW$_[$index]\fR, or situations where the default
arguments array is accessed implicitly such as \f(CW\*(C`shift\*(C'\fR or \f(CW\*(C`pop\*(C'\fR without
arguments.
.IP "The builtin namespace" 8
.IX Item "The builtin namespace"
Introduced in Perl 5.36.0.
.Sp
Using certain functions of this feature triggers warnings in the category
\&\f(CW\*(C`experimental::builtin\*(C'\fR.
.Sp
In Perl 5.36.0, a new namespace, \f(CW\*(C`builtin\*(C'\fR, was created for new core functions
that will not be present in every namespace, but will be available for
importing.  The namespace itself was considered experimental until Perl 5.39.2.
Some specific functions within it remain experimental.
.Sp
The ticket for this experiment is
[perl #19764] <https://github.com/Perl/perl5/issues/19764>.
.IP "The defer block modifier" 8
.IX Item "The defer block modifier"
Introduced in Perl 5.36.0
.Sp
Using this feature triggers warnings in the category \f(CW\*(C`experimental::defer\*(C'\fR.
.Sp
This feature adds a new kind of block, a \f(CW\*(C`defer\*(C'\fR block, which will not be
executed until the containing block is being exited.
.Sp
The ticket for this experiment is
[perl #17949] <https://github.com/Perl/perl5/issues/17949>.
.IP "Extra paired delimiters for quote-like operators" 8
.IX Item "Extra paired delimiters for quote-like operators"
Introduced in Perl 5.36.0
.Sp
Using this feature triggers warnings in the category
\&\f(CW\*(C`experimental::extra_paired_delimiters\*(C'\fR.
.Sp
This feature allows for many non-ASCII pairs of mirroring delimiters, for
example:
.Sp
.Vb 1
\&    my @array = qw« tinker tailor soldier spy »;
.Ve
.Sp
The ticket for this experiment is
[perl #19765] <https://github.com/Perl/perl5/issues/19765>.
.SS "Accepted features"
.IX Subsection "Accepted features"
These features were so wildly successful and played so well with others that
we decided to remove their experimental status and admit them as full, stable
features in the world of Perl, lavishing all the benefits and luxuries thereof.
They are also awarded +5 Stability and +3 Charisma.
.IP "64\-bit support" 8
.IX Item "64-bit support"
Introduced in Perl 5.005
.IP "die accepts a reference" 8
.IX Item "die accepts a reference"
Introduced in Perl 5.005
.IP "DB module" 8
.IX Item "DB module"
Introduced in Perl 5.6.0
.Sp
See also perldebug, perldebtut
.IP "Weak references" 8
.IX Item "Weak references"
Introduced in Perl 5.6.0
.IP "Internal file glob" 8
.IX Item "Internal file glob"
Introduced in Perl 5.6.0
.IP "\fBfork()\fR emulation" 8
.IX Item "fork() emulation"
Introduced in Perl 5.6.1
.Sp
See also perlfork
.IP "\-Dusemultiplicity \-Duseithreads" 8
.IX Item "-Dusemultiplicity -Duseithreads"
Introduced in Perl 5.6.0
.Sp
Accepted in Perl 5.8.0
.IP "Support for long doubles" 8
.IX Item "Support for long doubles"
Introduced in Perl 5.6.0
.Sp
Accepted in Perl 5.8.1
.ie n .IP "The ""\eN"" regex character class" 8
.el .IP "The \f(CW\eN\fR regex character class" 8
.IX Item "The N regex character class"
The \f(CW\*(C`\eN\*(C'\fR character class, not to be confused with the named character
sequence \f(CW\*(C`\eN{NAME}\*(C'\fR, denotes any non-newline character in a regular
expression.
.Sp
Introduced in Perl 5.12
.Sp
Exact version of acceptance unclear, but no later than Perl 5.18.
.ie n .IP """(?{code})"" and ""(??{ code })""" 8
.el .IP "\f(CW(?{code})\fR and \f(CW(??{ code })\fR" 8
.IX Item "(?{code}) and (??{ code })"
Introduced in Perl 5.6.0
.Sp
Accepted in Perl 5.20.0
.Sp
See also perlre
.IP "Linux abstract Unix domain sockets" 8
.IX Item "Linux abstract Unix domain sockets"
Introduced in Perl 5.9.2
.Sp
Accepted before Perl 5.20.0.  The Socket library is now primarily maintained
on CPAN, rather than in the perl core.
.Sp
See also Socket
.IP "Lvalue subroutines" 8
.IX Item "Lvalue subroutines"
Introduced in Perl 5.6.0
.Sp
Accepted in Perl 5.20.0
.Sp
See also perlsub
.IP "Backtracking control verbs" 8
.IX Item "Backtracking control verbs"
\&\f(CW\*(C`(*ACCEPT)\*(C'\fR
.Sp
Introduced in Perl 5.10
.Sp
Accepted in Perl 5.20.0
.ie n .IP "The "":pop"" IO pseudolayer" 8
.el .IP "The \f(CW:pop\fR IO pseudolayer" 8
.IX Item "The :pop IO pseudolayer"
See also "PERLIO" in perlrun
.Sp
Accepted in Perl 5.20.0
.ie n .IP """\es"" in regexp matches vertical tab" 8
.el .IP "\f(CW\es\fR in regexp matches vertical tab" 8
.IX Item "s in regexp matches vertical tab"
Accepted in Perl 5.22.0
.IP "Postfix dereference syntax" 8
.IX Item "Postfix dereference syntax"
Introduced in Perl 5.20.0
.Sp
Accepted in Perl 5.24.0
.IP "Lexical subroutines" 8
.IX Item "Lexical subroutines"
Introduced in Perl 5.18.0
.Sp
Accepted in Perl 5.26.0
.IP "String\- and number-specific bitwise operators" 8
.IX Item "String- and number-specific bitwise operators"
Introduced in Perl 5.22.0
.Sp
Accepted in Perl 5.28.0
.IP "Alphabetic assertions" 8
.IX Item "Alphabetic assertions"
Introduced in Perl 5.28.0
.Sp
Accepted in Perl 5.32.0
.IP "Script runs" 8
.IX Item "Script runs"
Introduced in Perl 5.28.0
.Sp
Accepted in Perl 5.32.0
.ie n .IP "The infix ""isa"" operator" 8
.el .IP "The infix \f(CWisa\fR operator" 8
.IX Item "The infix isa operator"
Introduced in Perl 5.32.0
.Sp
Accepted in Perl 5.36.0
.IP "Subroutine signatures" 8
.IX Item "Subroutine signatures"
Introduced in Perl 5.20.0
.Sp
Accepted in Perl 5.36.0
.IP "Regular Expression Set Operations" 8
.IX Item "Regular Expression Set Operations"
Introduced in Perl 5.18
.Sp
Accepted in Perl 5.36
.Sp
See : "Extended Bracketed Character Classes" in perlrecharclass
.IP "try/catch control structure" 8
.IX Item "try/catch control structure"
Introduced in Perl 5.34.0.
.Sp
Accepted in Perl 5.40 when not using the optional \f(CW\*(C`finally\*(C'\fR block.
.IP "The ""const"" attribute" 8
.IX Item "The ""const"" attribute"
Introduced in Perl 5.22.0
.Sp
Accepted in Perl 5.40
.Sp
See also: "Constant Functions" in perlsub
.IP "for loop with multiple iteration variables" 8
.IX Item "for loop with multiple iteration variables"
Introduced in Perl 5.36.0.
.Sp
Accepted in Perl 5.40.
.Sp
This feature enables a parenthesized list of iteration variables for \f(CW\*(C`for\*(C'\fR
rather than a single variable.
.SS "Removed features"
.IX Subsection "Removed features"
These features are no longer considered experimental and their functionality
has disappeared. It's your own fault if you wrote production programs using
these features after we explicitly told you not to (see perlpolicy).
.IP "5.005\-style threading" 8
.IX Item "5.005-style threading"
Introduced in Perl 5.005
.Sp
Removed in Perl 5.10
.IP perlcc 8
.IX Item "perlcc"
Introduced in Perl 5.005
.Sp
Moved from Perl 5.9.0 to CPAN
.IP "The pseudo-hash data type" 8
.IX Item "The pseudo-hash data type"
Introduced in Perl 5.6.0
.Sp
Removed in Perl 5.9.0
.IP "GetOpt::Long Options can now take multiple values at once (experimental)" 8
.IX Item "GetOpt::Long Options can now take multiple values at once (experimental)"
\&\f(CW\*(C`Getopt::Long\*(C'\fR upgraded to version 2.35
.Sp
Removed in Perl 5.8.8
.IP Assertions 8
.IX Item "Assertions"
The \f(CW\*(C`\-A\*(C'\fR command line switch
.Sp
Introduced in Perl 5.9.0
.Sp
Removed in Perl 5.9.5
.IP Test::Harness::Straps 8
.IX Item "Test::Harness::Straps"
Moved from Perl 5.10.1 to CPAN
.ie n .IP """legacy""" 8
.el .IP \f(CWlegacy\fR 8
.IX Item "legacy"
The experimental \f(CW\*(C`legacy\*(C'\fR pragma was swallowed by the \f(CW\*(C`feature\*(C'\fR pragma.
.Sp
Introduced in Perl 5.11.2
.Sp
Removed in Perl 5.11.3
.ie n .IP "Lexical $_" 8
.el .IP "Lexical \f(CW$_\fR" 8
.IX Item "Lexical $_"
Using this feature triggered warnings in the category
\&\f(CW\*(C`experimental::lexical_topic\*(C'\fR.
.Sp
Introduced in Perl 5.10.0
.Sp
Removed in Perl 5.24.0
.IP "Array and hash container functions accept references" 8
.IX Item "Array and hash container functions accept references"
Using this feature triggered warnings in the category
\&\f(CW\*(C`experimental::autoderef\*(C'\fR.
.Sp
Superseded by "Postfix dereference syntax".
.Sp
Introduced in Perl 5.14.0
.Sp
Removed in Perl 5.24.0
.ie n .IP """our"" can have an experimental optional attribute ""unique""" 8
.el .IP "\f(CWour\fR can have an experimental optional attribute \f(CWunique\fR" 8
.IX Item "our can have an experimental optional attribute unique"
Introduced in Perl 5.8.0
.Sp
Deprecated in Perl 5.10.0
.Sp
Removed in Perl 5.28.0
.ie n .IP "The "":win32"" IO pseudolayer" 8
.el .IP "The \f(CW:win32\fR IO pseudolayer" 8
.IX Item "The :win32 IO pseudolayer"
Introduced in Perl 5.8.0 (or before)
.Sp
Removed in Perl 5.36.0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
For a complete list of features check feature.
.SH AUTHORS
.IX Header "AUTHORS"
brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.PP
Sébastien Aperghis-Tramoni \f(CW\*(C`<saper@cpan.org>\*(C'\fR
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2010, brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.SH LICENSE
.IX Header "LICENSE"
You can use and redistribute this document under the same terms as Perl
itself.
