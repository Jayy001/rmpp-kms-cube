.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLFREEBSD 1"
.TH PERLFREEBSD 1 2024-02-27 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
perlfreebsd \- Perl version 5 on FreeBSD systems
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This document describes various features of FreeBSD that will affect how Perl
version 5 (hereafter just Perl) is compiled and/or runs.
.SS "FreeBSD core dumps from readdir_r with ithreads"
.IX Subsection "FreeBSD core dumps from readdir_r with ithreads"
When perl is configured to use ithreads, it will use re-entrant library calls
in preference to non-re-entrant versions.  There is a bug in FreeBSD's
\&\f(CW\*(C`readdir_r\*(C'\fR function in versions 4.5 and earlier that can cause a SEGV when
reading large directories. A patch for FreeBSD libc is available
(see <https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=30631>)
which has been integrated into FreeBSD 4.6.
.ie n .SS "$^X doesn't always contain a full path in FreeBSD"
.el .SS "\f(CW$^X\fP doesn't always contain a full path in FreeBSD"
.IX Subsection "$^X doesn't always contain a full path in FreeBSD"
perl sets \f(CW$^X\fR where possible to a full path by asking the operating
system. On FreeBSD the full path of the perl interpreter is found by using
\&\f(CW\*(C`sysctl\*(C'\fR with \f(CW\*(C`KERN_PROC_PATHNAME\*(C'\fR if that is supported, else by reading
the symlink \fI/proc/curproc/file\fR. FreeBSD 7 and earlier has a bug where
either approach sometimes returns an incorrect value
(see <https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=35703>).
In these cases perl will fall back to the old behaviour of using C's
\&\f(CW\*(C`argv[0]\*(C'\fR value for \f(CW$^X\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Nicholas Clark <nick@ccl4.org>, collating wisdom supplied by Slaven Rezic
and Tim Bunce.
.PP
Please report any errors, updates, or suggestions to
<https://github.com/Perl/perl5/issues>.
