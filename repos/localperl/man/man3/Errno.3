.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Errno 3"
.TH Errno 3 2024-09-20 "perl v5.40.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Errno \- System errno constants
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Errno qw(EINTR EIO :POSIX);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Errno\*(C'\fR defines and conditionally exports all the error constants
defined in your system \fIerrno.h\fR include file. It has a single export
tag, \f(CW\*(C`:POSIX\*(C'\fR, which will export all POSIX defined error numbers.
.PP
On Windows, \f(CW\*(C`Errno\*(C'\fR also defines and conditionally exports all the
Winsock error constants defined in your system \fIWinError.h\fR include
file. These are included in a second export tag, \f(CW\*(C`:WINSOCK\*(C'\fR.
.PP
\&\f(CW\*(C`Errno\*(C'\fR also makes \f(CW\*(C`%!\*(C'\fR magic such that each element of \f(CW\*(C`%!\*(C'\fR has a
non-zero value only if \f(CW$!\fR is set to that value. For example:
.PP
.Vb 8
\&    my $fh;
\&    unless (open($fh, "<", "/fangorn/spouse")) {
\&        if ($!{ENOENT}) {
\&            warn "Get a wife!\en";
\&        } else {
\&            warn "This path is barred: $!";
\&        } 
\&    }
.Ve
.PP
If a specified constant \f(CW\*(C`EFOO\*(C'\fR does not exist on the system, \f(CW$!{EFOO}\fR
returns \f(CW""\fR.  You may use \f(CW\*(C`exists $!{EFOO}\*(C'\fR to check whether the
constant is available on the system.
.PP
Perl automatically loads \f(CW\*(C`Errno\*(C'\fR the first time you use \f(CW\*(C`%!\*(C'\fR, so you don't
need an explicit \f(CW\*(C`use\*(C'\fR.
.SH CAVEATS
.IX Header "CAVEATS"
Importing a particular constant may not be very portable, because the
import will fail on platforms that do not have that constant.  A more
portable way to set \f(CW$!\fR to a valid value is to use:
.PP
.Vb 3
\&    if (exists &Errno::EFOO) {
\&        $! = &Errno::EFOO;
\&    }
.Ve
.SH AUTHOR
.IX Header "AUTHOR"
Graham Barr <gbarr@pobox.com>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 1997\-8 Graham Barr. All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
